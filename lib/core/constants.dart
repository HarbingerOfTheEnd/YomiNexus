import 'package:flutter/material.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:yominexus/ui/library/novel/novel_library_view.dart';
import 'package:yominexus/ui/settings/appearance.dart';

@immutable
class Constants {
  const Constants._();

  static const String initialRoute = AppearanceSettingsView.routeName;
  static final Map<String, WidgetBuilder> routes = {
    NovelLibraryView.routeName: (context) => const NovelLibraryView(),
    AppearanceSettingsView.routeName: (context) =>
        const AppearanceSettingsView(),
  };

  static late final SharedPreferencesWithCache sharedPreferences;

  static const String _keyPrefix = 'yominexus';
  static const String colorschemeKey = '$_keyPrefix.colorscheme';
  static const String themeModeKey = '$_keyPrefix.themeMode';
  static const String isPureBlackDarkModeKey =
      '$_keyPrefix.isPureBlackDarkMode';
  static const Set<String> allowList = {
    colorschemeKey,
    themeModeKey,
  };

  static const ColorScheme yominexusColorSchemeLight = ColorScheme.light(
    primary: Color(0xFF0058CA),
    onPrimary: Color(0xFFFFFFFF),
    primaryContainer: Color(0xFFD9E2FF),
    onPrimaryContainer: Color(0xFF001945),
    inversePrimary: Color(0xFFB0C6FF),
    secondary: Color(0xFF0058CA),
    onSecondary: Color(0xFFFFFFFF),
    secondaryContainer: Color(0xFFD9E2FF),
    onSecondaryContainer: Color(0xFF001945),
    tertiary: Color(0xFF006E1B),
    onTertiary: Color(0xFFFFFFFF),
    tertiaryContainer: Color(0xFF95F990),
    onTertiaryContainer: Color(0xFF002203),
    surface: Color(0xFFFEFBFF),
    onSurface: Color(0xFF1B1B1F),
    onSurfaceVariant: Color(0xFF44464F),
    surfaceTint: Color(0xFF0058CA),
    inverseSurface: Color(0xFF303034),
    onInverseSurface: Color(0xFFF2F0F4),
    error: Color(0xFFBA1A1A),
    onError: Color(0xFFFFFFFF),
    errorContainer: Color(0xFFFFDAD6),
    onErrorContainer: Color(0xFF410002),
    outline: Color(0xFF757780),
    outlineVariant: Color(0xFFC5C6D0),
    surfaceContainerLowest: Color(0xFFF5F1F8),
    surfaceContainerLow: Color(0xFFF7F2FA),
    surfaceContainer: Color(0xFFF3EDF7),
    surfaceContainerHigh: Color(0xFFFCF7FF),
    surfaceContainerHighest: Color(0xFFFCF7FF),
  );
  static const ColorScheme yominexusColorSchemeDark = ColorScheme.dark(
    primary: Color(0xFFB0C6FF),
    onPrimary: Color(0xFF002D6E),
    primaryContainer: Color(0xFF00429B),
    onPrimaryContainer: Color(0xFFD9E2FF),
    inversePrimary: Color(0xFF0058CA),
    secondary: Color(0xFFB0C6FF),
    onSecondary: Color(0xFF002D6E),
    secondaryContainer: Color(0xFF00429B),
    onSecondaryContainer: Color(0xFFD9E2FF),
    tertiary: Color(0xFF7ADC77),
    onTertiary: Color(0xFF003909),
    tertiaryContainer: Color(0xFF005312),
    onTertiaryContainer: Color(0xFF95F990),
    surface: Color(0xFF1B1B1F),
    onSurface: Color(0xFFE3E2E6),
    onSurfaceVariant: Color(0xFFC5C6D0),
    surfaceTint: Color(0xFFB0C6FF),
    inverseSurface: Color(0xFFE3E2E6),
    onInverseSurface: Color(0xFF1B1B1F),
    error: Color(0xFFFFB4AB),
    onError: Color(0xFF690005),
    errorContainer: Color(0xFF93000A),
    onErrorContainer: Color(0xFFFFDAD6),
    outline: Color(0xFF8F9099),
    outlineVariant: Color(0xFF44464F),
    surfaceContainerLowest: Color(0xFF1A181D),
    surfaceContainerLow: Color(0xFF1E1C22),
    surfaceContainer: Color(0xFF211F26),
    surfaceContainerHigh: Color(0xFF292730),
    surfaceContainerHighest: Color(0xFF302E38),
  );
  static const ColorScheme cloudflareColorSchemeLight = ColorScheme.light(
    primary: Color(0xFFF38020),
    onPrimary: Color(0xFFEFF2F5),
    primaryContainer: Color(0xFFF38020),
    onPrimaryContainer: Color(0xFFEFF2F5),
    inversePrimary: Color(0xFFD6BAFF),
    secondary: Color(0xFFF38020),
    onSecondary: Color(0xFFEFF2F5),
    secondaryContainer: Color(0xFFF38020),
    onSecondaryContainer: Color(0xFFEFF2F5),
    tertiary: Color(0xFFEFF2F5),
    onTertiary: Color(0xFFF38020),
    tertiaryContainer: Color(0xFFEFF2F5),
    onTertiaryContainer: Color(0xFFF38020),
    surface: Color(0xFFEFF2F5),
    onSurface: Color(0xFF1B1B22),
    surfaceContainerHighest: Color(0xFFB9B0CC),
    onSurfaceVariant: Color(0xFFD84945),
    surfaceTint: Color(0xFFF38020),
    inverseSurface: Color(0xFF313033),
    onInverseSurface: Color(0xFFF3EFF4),
    outline: Color(0xFFF38020),
  );
  static const ColorScheme cloudflareColorSchemeDark = ColorScheme.dark(
    primary: Color(0xFFF38020),
    onPrimary: Color(0xFF1B1B22),
    primaryContainer: Color(0xFFF38020),
    onPrimaryContainer: Color(0xFF1B1B22),
    inversePrimary: Color(0xFFD6BAFF),
    secondary: Color(0xFFF38020),
    onSecondary: Color(0xFF1B1B22),
    secondaryContainer: Color(0xFFF38020),
    onSecondaryContainer: Color(0xFF1B1B22),
    tertiary: Color(0xFF1B1B22),
    onTertiary: Color(0xFFF38020),
    tertiaryContainer: Color(0xFF1B1B22),
    onTertiaryContainer: Color(0xFFF38020),
    surface: Color(0xFF1B1B22),
    onSurface: Color(0xFFEFF2F5),
    surfaceContainerHighest: Color(0xFF3F3F46),
    onSurfaceVariant: Color(0xFFD8FFFF),
    surfaceTint: Color(0xFFF38020),
    inverseSurface: Color(0xFFF3EFF4),
    onInverseSurface: Color(0xFF313033),
    outline: Color(0xFFF38020),
  );
  static const ColorScheme cottonCandyColorSchemeLight = ColorScheme.light(
    primary: Color(0xFF9A4058),
    onPrimary: Color(0xFFFFFFFF),
    primaryContainer: Color(0xFFFFD9DF),
    onPrimaryContainer: Color(0xFF3F0017),
    secondary: Color(0xFF5BCEFA),
    onSecondary: Color(0xFFFFFFFF),
    secondaryContainer: Color(0xFFBCE9FF),
    onSecondaryContainer: Color(0xFF001F2A),
    tertiary: Color(0xFF9A4058),
    onTertiary: Color(0xFFFFFFFF),
    tertiaryContainer: Color(0xFFFFD9DF),
    onTertiaryContainer: Color(0xFF3F0017),
    surface: Color(0xFFFFFBFF),
    onSurface: Color(0xFF201A1B),
    surfaceContainerHighest: Color(0xFFF3DDE0),
    onSurfaceVariant: Color(0xFF524345),
    surfaceTint: Color(0xFF9A4058),
    inverseSurface: Color(0xFF352F30),
    onInverseSurface: Color(0xFFFAEEEF),
    outline: Color(0xFF847375),
    inversePrimary: Color(0xFFFFB1C1),
  );
  static const ColorScheme cottonCandyColorSchemeDark = ColorScheme.dark(
    primary: Color(0xFFFFB1C1),
    onPrimary: Color(0xFF5F112B),
    primaryContainer: Color(0xFF7C2941),
    onPrimaryContainer: Color(0xFFFFD9DF),
    secondary: Color(0xFF64D3FF),
    onSecondary: Color(0xFF003546),
    secondaryContainer: Color(0xFF004D63),
    onSecondaryContainer: Color(0xFFBCE9FF),
    tertiary: Color(0xFFFFB1C1),
    onTertiary: Color(0xFF5F112B),
    tertiaryContainer: Color(0xFF7C2941),
    onTertiaryContainer: Color(0xFFFFD9DF),
    surface: Color(0xFF201A1B),
    onSurface: Color(0xFFECE0E0),
    surfaceContainerHighest: Color(0xFF524345),
    onSurfaceVariant: Color(0xFFD6C2C4),
    surfaceTint: Color(0xFFFFB1C1),
    inverseSurface: Color(0xFFECE0E0),
    onInverseSurface: Color(0xFF201A1B),
    outline: Color(0xFF9F8C8F),
    inversePrimary: Color(0xFF9A4058),
  );
  static const ColorScheme doomColorSchemeLight = ColorScheme.light(
    primary: Color(0xFFFF0000),
    onPrimary: Color(0xFFFFFFFF),
    primaryContainer: Color(0xFFFF0000),
    onPrimaryContainer: Color(0xFFFFFFFF),
    inversePrimary: Color(0xFF6D0D0B),
    secondary: Color(0xFFFF0000),
    onSecondary: Color(0xFFFFFFFF),
    secondaryContainer: Color(0xFFFF0000),
    onSecondaryContainer: Color(0xFFFFFFFF),
    tertiary: Color(0xFFBFBFBF),
    onTertiary: Color(0xFFFF0000),
    tertiaryContainer: Color(0xFFBFBFBF),
    onTertiaryContainer: Color(0xFFFF0000),
    surface: Color(0xFF212121),
    onSurface: Color(0xFFFFFFFF),
    surfaceContainerHighest: Color(0xFF4D4D4D),
    onSurfaceVariant: Color(0xFFD849454E),
    surfaceTint: Color(0xFFFF0000),
    inverseSurface: Color(0xFF424242),
    onInverseSurface: Color(0xFFFAFAFA),
    outline: Color(0xFFFF0000),
  );
  static const ColorScheme doomColorSchemeDark = ColorScheme.dark(
    primary: Color(0xFFFF0000),
    onPrimary: Color(0xFFFAFAFA),
    primaryContainer: Color(0xFFFF0000),
    onPrimaryContainer: Color(0xFFFAFAFA),
    secondary: Color(0xFFFF0000),
    onSecondary: Color(0xFFFAFAFA),
    secondaryContainer: Color(0xFFFF0000),
    onSecondaryContainer: Color(0xFFFAFAFA),
    tertiary: Color(0xFFBFBFBF),
    onTertiary: Color(0xFFFF0000),
    tertiaryContainer: Color(0xFFBFBFBF),
    onTertiaryContainer: Color(0xFFFF0000),
    surface: Color(0xFF1B1B1B),
    onSurface: Color(0xFFFFFFFF),
    surfaceContainerHighest: Color(0xFF303030),
    onSurfaceVariant: Color(0xFFD8FFFFFF),
    surfaceTint: Color(0xFFFF0000),
    inverseSurface: Color(0xFFFAFAFA),
    onInverseSurface: Color(0xFF313131),
    outline: Color(0xFFFF0000),
    inversePrimary: Color(0xFF6D0D0B),
  );
  static const ColorScheme greenAppleColorSchemeLight = ColorScheme.light(
    primary: Color(0xFF005927),
    onPrimary: Color(0xFFFFFFFF),
    primaryContainer: Color(0xFF188140),
    onPrimaryContainer: Color(0xFFFFFFFF),
    secondary: Color(0xFF005927),
    onSecondary: Color(0xFFFFFFFF),
    secondaryContainer: Color(0xFF97f7a9),
    onSecondaryContainer: Color(0xFF000000),
    tertiary: Color(0xFF9D0012),
    onTertiary: Color(0xFFFFFFFF),
    tertiaryContainer: Color(0xFFD33131),
    onTertiaryContainer: Color(0xFFFFFFFF),
    error: Color(0xFFBA1A1A),
    onError: Color(0xFFFFFFFF),
    errorContainer: Color(0xFFFFDAD6),
    onErrorContainer: Color(0xFF410002),
    surface: Color(0xFFF6FBF2),
    onSurface: Color(0xFF181D18),
    onSurfaceVariant: Color(0xFF3F493F),
    outline: Color(0xFF6F7A6E),
    outlineVariant: Color(0xFFBECABC),
    scrim: Color(0xFF000000),
    inverseSurface: Color(0xFF2C322C),
    onInverseSurface: Color(0xFFEDF2E9),
    inversePrimary: Color(0xFF7ADB8F),
    surfaceDim: Color(0xFFD6DCD3),
    surfaceBright: Color(0xFFF6FBF2),
    surfaceContainerLowest: Color(0xFFFFFFFF),
    surfaceContainerLow: Color(0xFFF0F5EC),
    surfaceContainer: Color(0xFFEAEFE6),
    surfaceContainerHigh: Color(0xFFE4EAE1),
    surfaceContainerHighest: Color(0xFFDFE4DB),
  );
  static const ColorScheme greenAppleColorSchemeDark = ColorScheme.dark(
    primary: Color(0xFF7ADB8F),
    onPrimary: Color(0xFF003917),
    primaryContainer: Color(0xFF017737),
    onPrimaryContainer: Color(0xFFFFFFFF),
    secondary: Color(0xFF7ADB8F),
    onSecondary: Color(0xFF003917),
    secondaryContainer: Color(0xFF017737),
    onSecondaryContainer: Color(0xFFFFFFFF),
    tertiary: Color(0xFFFFB3AC),
    onTertiary: Color(0xFF680008),
    tertiaryContainer: Color(0xFFC7282A),
    onTertiaryContainer: Color(0xFFFFFFFF),
    error: Color(0xFFFFB4AB),
    onError: Color(0xFF690005),
    errorContainer: Color(0xFF93000A),
    onErrorContainer: Color(0xFFFFDAD6),
    surface: Color(0xFF0F1510),
    onSurface: Color(0xFFDFE4DB),
    onSurfaceVariant: Color(0xFFBECABC),
    outline: Color(0xFF889487),
    outlineVariant: Color(0xFF3F493F),
    scrim: Color(0xFF000000),
    inverseSurface: Color(0xFFDFE4DB),
    onInverseSurface: Color(0xFF2C322C),
    inversePrimary: Color(0xFF006D32),
    surfaceDim: Color(0xFF0F1510),
    surfaceBright: Color(0xFF353B35),
    surfaceContainerLowest: Color(0xFF0A0F0B),
    surfaceContainerLow: Color(0xFF181D18),
    surfaceContainer: Color(0xFF1C211C),
    surfaceContainerHigh: Color(0xFF262B26),
    surfaceContainerHighest: Color(0xFF313630),
  );
  static const ColorScheme lavenderColorSchemeLight = ColorScheme.light(
    primary: Color(0xFF6D41C8),
    onPrimary: Color(0xFFFFFFFF),
    primaryContainer: Color(0xFF7B46AF),
    onPrimaryContainer: Color(0xFF130038),
    secondary: Color(0xFF7B46AF),
    onSecondary: Color(0xFFEDE2FF),
    secondaryContainer: Color(0xFFC9B0E6),
    onSecondaryContainer: Color(0xFF7B46AF),
    tertiary: Color(0xFFEDE2FF),
    onTertiary: Color(0xFF7B46AF),
    tertiaryContainer: Color(0xFF6D3BF0),
    onTertiaryContainer: Color(0xFFFFFFFF),
    error: Color(0xFFBA1A1A),
    onError: Color(0xFFFFFFFF),
    errorContainer: Color(0xFFFFDAD6),
    onErrorContainer: Color(0xFF410002),
    surface: Color(0xFFEDE2FF),
    onSurface: Color(0xFF1D1A22),
    onSurfaceVariant: Color(0xFF4A4453),
    outline: Color(0xFF7B7485),
    outlineVariant: Color(0xFFCBC3D6),
    scrim: Color(0xFF000000),
    inverseSurface: Color(0xFF322F38),
    onInverseSurface: Color(0xFFF5EEFA),
    inversePrimary: Color(0xFFA177FF),
    surfaceDim: Color(0xFFDED7E3),
    surfaceBright: Color(0xFFEDE2FF),
    surfaceContainerLowest: Color(0xFFDACCEC),
    surfaceContainerLow: Color(0xFFDED0F1),
    surfaceContainer: Color(0xFFE4D5F8),
    surfaceContainerHigh: Color(0xFFEADCFD),
    surfaceContainerHighest: Color(0xFFEEE2FF),
  );
  static const ColorScheme lavenderColorSchemeDark = ColorScheme.dark(
    primary: Color(0xFFA177FF),
    onPrimary: Color(0xFF3D0090),
    primaryContainer: Color(0xFFA177FF),
    onPrimaryContainer: Color(0xFFFFFFFF),
    secondary: Color(0xFFA177FF),
    onSecondary: Color(0xFFFFFFFF),
    secondaryContainer: Color(0xFF423271),
    onSecondaryContainer: Color(0xFFA177FF),
    tertiary: Color(0xFFCDBDFF),
    onTertiary: Color(0xFF360096),
    tertiaryContainer: Color(0xFF5512D8),
    onTertiaryContainer: Color(0xFFEFE6FF),
    error: Color(0xFFFFB4AB),
    onError: Color(0xFF690005),
    errorContainer: Color(0xFF93000A),
    onErrorContainer: Color(0xFFFFDAD6),
    surface: Color(0xFF111129),
    onSurface: Color(0xFFE7E0EC),
    onSurfaceVariant: Color(0xFFCBC3D6),
    outline: Color(0xFF958E9F),
    outlineVariant: Color(0xFF4A4453),
    scrim: Color(0xFF000000),
    inverseSurface: Color(0xFFE7E0EC),
    onInverseSurface: Color(0xFF322F38),
    inversePrimary: Color(0xFF6D41C8),
    surfaceDim: Color(0xFF111129),
    surfaceBright: Color(0xFF3B3841),
    surfaceContainerLowest: Color(0xFF15132d),
    surfaceContainerLow: Color(0xFF171531),
    surfaceContainer: Color(0xFF1D193B),
    surfaceContainerHigh: Color(0xFF241f41),
    surfaceContainerHighest: Color(0xFF282446),
  );
  static const ColorScheme matrixColorSchemeLight = ColorScheme.light(
    primary: Color(0xFF00FF00),
    onPrimary: Color(0xFF000000),
    primaryContainer: Color(0xFF00FF00),
    onPrimaryContainer: Color(0xFF000000),
    secondary: Color(0xFF00FF00),
    onSecondary: Color(0xFF000000),
    secondaryContainer: Color(0xFF00FF00),
    onSecondaryContainer: Color(0xFF000000),
    tertiary: Color(0xFF000000),
    onTertiary: Color(0xFF00FF00),
    tertiaryContainer: Color(0xFF000000),
    onTertiaryContainer: Color(0xFF00FF00),
    surface: Color(0xFF000000),
    onSurface: Color(0xFFFFFFFF),
    surfaceContainerHighest: Color(0xFF111111),
    onSurfaceVariant: Color(0xFFD849454E),
    surfaceTint: Color(0xFF00FF00),
    inverseSurface: Color(0xFF424242),
    onInverseSurface: Color(0xFFFAFAFA),
    outline: Color(0xFF00FF00),
    inversePrimary: Color(0xFF007700),
  );
  static const ColorScheme matrixColorSchemeDark = ColorScheme.dark(
    primary: Color(0xFF00FF00),
    onPrimary: Color(0xFFFAFAFA),
    primaryContainer: Color(0xFF00FF00),
    onPrimaryContainer: Color(0xFFFAFAFA),
    secondary: Color(0xFF00FF00),
    onSecondary: Color(0xFFFAFAFA),
    secondaryContainer: Color(0xFF00FF00),
    onSecondaryContainer: Color(0xFFFAFAFA),
    tertiary: Color(0xFFFFFFFF),
    onTertiary: Color(0xFF00FF00),
    tertiaryContainer: Color(0xFFFFFFFF),
    onTertiaryContainer: Color(0xFF00FF00),
    surface: Color(0xFF111111),
    onSurface: Color(0xFFFFFFFF),
    surfaceContainerHighest: Color(0xFF212121),
    onSurfaceVariant: Color(0xFFD8FFFFFF),
    surfaceTint: Color(0xFF00FF00),
    inverseSurface: Color(0xFFFAFAFA),
    onInverseSurface: Color(0xFF313131),
    outline: Color(0xFF00FF00),
    inversePrimary: Color(0xFF007700),
  );
  static const ColorScheme midnightDuskColorSchemeLight = ColorScheme.light(
    primary: Color(0xFFBB0054),
    onPrimary: Color(0xFFFFFFFF),
    primaryContainer: Color(0xFFFFD9E1),
    onPrimaryContainer: Color(0xFF3F0017),
    inversePrimary: Color(0xFFFFB1C4),
    secondary: Color(0xFFBB0054),
    onSecondary: Color(0xFFFFFFFF),
    secondaryContainer: Color(0xFFEFBAD4),
    onSecondaryContainer: Color(0xFFD1377C),
    tertiary: Color(0xFF006638),
    onTertiary: Color(0xFFFFFFFF),
    tertiaryContainer: Color(0xFF00894b),
    onTertiaryContainer: Color(0xFF2D1600),
    surface: Color(0xFFFFFBFF),
    onSurface: Color(0xFF1C1B1F),
    onSurfaceVariant: Color(0xFF524346),
    surfaceTint: Color(0xFFBB0054),
    inverseSurface: Color(0xFF313033),
    onInverseSurface: Color(0xFFF4F0F4),
    outline: Color(0xFF847376),
    surfaceContainerLowest: Color(0xFFDAC0CD),
    surfaceContainerLow: Color(0xFFE8D1DD),
    surfaceContainer: Color(0xFFF9E6F1),
    surfaceContainerHigh: Color(0xFFFCF3F8),
    surfaceContainerHighest: Color(0xFFFEF9FC),
  );
  static const ColorScheme midnightDuskColorSchemeDark = ColorScheme.dark(
    primary: Color(0xFFF02475),
    onPrimary: Color(0xFFFFFFFF),
    primaryContainer: Color(0xFFBD1C5C),
    onPrimaryContainer: Color(0xFFFFFFFF),
    inversePrimary: Color(0xFFF02475),
    secondary: Color(0xFFF02475),
    onSecondary: Color(0xFF16151D),
    secondaryContainer: Color(0xFF66183C),
    onSecondaryContainer: Color(0xFFF02475),
    tertiary: Color(0xFF55971C),
    onTertiary: Color(0xFF16151D),
    tertiaryContainer: Color(0xFF386412),
    onTertiaryContainer: Color(0xFFE5E1E5),
    surface: Color(0xFF16151D),
    onSurface: Color(0xFFE5E1E5),
    onSurfaceVariant: Color(0xFFD6C1C4),
    surfaceTint: Color(0xFFF02475),
    inverseSurface: Color(0xFF333043),
    onInverseSurface: Color(0xFFFFFFFF),
    outline: Color(0xFF9F8C8F),
    surfaceContainerLowest: Color(0xFF221320),
    surfaceContainerLow: Color(0xFF251522),
    surfaceContainer: Color(0xFF281624),
    surfaceContainerHigh: Color(0xFF2D1C2A),
    surfaceContainerHighest: Color(0xFF2F1F2C),
  );
  static const ColorScheme mochaColorSchemeLight = ColorScheme.light(
    primary: Color(0xFF745B00),
    onPrimary: Color(0xFFFFFFFF),
    primaryContainer: Color(0xFFFFE08D),
    onPrimaryContainer: Color(0xFF241A00),
    secondary: Color(0xFF745B00),
    onSecondary: Color(0xFFFFFFFF),
    secondaryContainer: Color(0xFFFFE08D),
    onSecondaryContainer: Color(0xFF241A00),
    tertiary: Color(0xFF47664A),
    onTertiary: Color(0xFFFFFFFF),
    tertiaryContainer: Color(0xFFC9ECC8),
    onTertiaryContainer: Color(0xFF04210B),
    surface: Color(0xFFFFFBFF),
    onSurface: Color(0xFF1E1B16),
    surfaceContainerHighest: Color(0xFFEBE1CF),
    onSurfaceVariant: Color(0xFF4C4639),
    surfaceTint: Color(0xFF745B00),
    inverseSurface: Color(0xFF362F2D),
    onInverseSurface: Color(0xFFFBEAEB),
    outline: Color(0xFF7E7667),
    inversePrimary: Color(0xFFFFB59D),
  );
  static const ColorScheme mochaColorSchemeDark = ColorScheme.dark(
    primary: Color(0xFFEBC248),
    onPrimary: Color(0xFF3D2F00),
    primaryContainer: Color(0xFF584400),
    onPrimaryContainer: Color(0xFFFFE08D),
    secondary: Color(0xFFEBC248),
    onSecondary: Color(0xFF3D2F00),
    secondaryContainer: Color(0xFF584400),
    onSecondaryContainer: Color(0xFFFFE08D),
    tertiary: Color(0xFFADCFAD),
    onTertiary: Color(0xFF19361F),
    tertiaryContainer: Color(0xFF304D34),
    onTertiaryContainer: Color(0xFFC9ECC8),
    surface: Color(0xFF1E1B16),
    onSurface: Color(0xFFE8E1D9),
    surfaceContainerHighest: Color(0xFF4C4639),
    onSurfaceVariant: Color(0xFFCFC5B4),
    surfaceTint: Color(0xFFEBC248),
    inverseSurface: Color(0xFFEDE0DD),
    onInverseSurface: Color(0xFF211A18),
    outline: Color(0xFF989080),
    inversePrimary: Color(0xFFAE3200),
  );
  static const ColorScheme sapphireColorSchemeLight = ColorScheme.light(
    primary: Color(0xFF1E88E5),
    onPrimary: Color(0xFFFFFFFF),
    primaryContainer: Color(0xFF1E88E5),
    onPrimaryContainer: Color(0xFFFFFFFF),
    inversePrimary: Color(0xFF2979FF),
    secondary: Color(0xFF1E88E5),
    onSecondary: Color(0xFFFFFFFF),
    secondaryContainer: Color(0xFF1E88E5),
    onSecondaryContainer: Color(0xFFFFFFFF),
    tertiary: Color(0xFFE1F5FE),
    onTertiary: Color(0xFF1E88E5),
    tertiaryContainer: Color(0xFFE1F5FE),
    onTertiaryContainer: Color(0xFF1E88E5),
    surface: Color(0xFFFFFFFF),
    onSurface: Color(0xFF212121),
    surfaceContainerHighest: Color(0xFFB3E5FC),
    onSurfaceVariant: Color(0xFFD849454E),
    surfaceTint: Color(0xFF1E88E5),
    inverseSurface: Color(0xFF424242),
    onInverseSurface: Color(0xFFFAFAFA),
    outline: Color(0xFF1E88E5),
  );
  static const ColorScheme sapphireColorSchemeDark = ColorScheme.dark(
    primary: Color(0xFF1E88E5),
    onPrimary: Color(0xFFFAFAFA),
    primaryContainer: Color(0xFF1E88E5),
    onPrimaryContainer: Color(0xFFFAFAFA),
    inversePrimary: Color(0xFF2979FF),
    secondary: Color(0xFF1E88E5),
    onSecondary: Color(0xFFFAFAFA),
    secondaryContainer: Color(0xFF1E88E5),
    onSecondaryContainer: Color(0xFFFAFAFA),
    tertiary: Color(0xFF212121),
    onTertiary: Color(0xFF1E88E5),
    tertiaryContainer: Color(0xFF212121),
    onTertiaryContainer: Color(0xFF1E88E5),
    surface: Color(0xFF212121),
    onSurface: Color(0xFFFFFFFF),
    surfaceContainerHighest: Color(0xFF424242),
    onSurfaceVariant: Color(0xFFD8FFFFFF),
    surfaceTint: Color(0xFF1E88E5),
    inverseSurface: Color(0xFFFAFAFA),
    onInverseSurface: Color(0xFF313131),
    outline: Color(0xFF1E88E5),
  );
  static const ColorScheme nordColorSchemeLight = ColorScheme.light(
    primary: Color(0xFF5E81AC),
    onPrimary: Color(0xFF000000),
    primaryContainer: Color(0xFF5E81AC),
    onPrimaryContainer: Color(0xFF000000),
    inversePrimary: Color(0xFF8CA8CD),
    secondary: Color(0xFF81A1C1),
    onSecondary: Color(0xFF2E3440),
    secondaryContainer: Color(0xFF91B4D7),
    onSecondaryContainer: Color(0xFF2E3440),
    tertiary: Color(0xFF88C0D0),
    onTertiary: Color(0xFF2E3440),
    tertiaryContainer: Color(0xFF88C0D0),
    onTertiaryContainer: Color(0xFF2E3440),
    surface: Color(0xFFE5E9F0),
    onSurface: Color(0xFF2E3440),
    onSurfaceVariant: Color(0xFF2E3440),
    surfaceTint: Color(0xFF5E81AC),
    inverseSurface: Color(0xFF3B4252),
    onInverseSurface: Color(0xFFECEFF4),
    outline: Color(0xFF2E3440),
    onError: Color(0xFFECEFF4),
    errorContainer: Color(0xFFBF616A),
    onErrorContainer: Color(0xFF000000),
    surfaceContainerLowest: Color(0xFFD1D7E0),
    surfaceContainerLow: Color(0xFFD6DCE6),
    surfaceContainer: Color(0xFFDAE0EA),
    surfaceContainerHigh: Color(0xFFE9EDF3),
    surfaceContainerHighest: Color(0xFFF2F4F8),
  );
  static const ColorScheme nordColorSchemeDark = ColorScheme.dark(
    primary: Color(0xFF88C0D0),
    onPrimary: Color(0xFF2E3440),
    primaryContainer: Color(0xFF88C0D0),
    onPrimaryContainer: Color(0xFF2E3440),
    inversePrimary: Color(0xFF397E91),
    secondary: Color(0xFF81A1C1),
    onSecondary: Color(0xFF2E3440),
    secondaryContainer: Color(0xFF506275),
    onSecondaryContainer: Color(0xFF88C0D0),
    tertiary: Color(0xFF5E81AC),
    onTertiary: Color(0xFF000000),
    tertiaryContainer: Color(0xFF5E81AC),
    onTertiaryContainer: Color(0xFF000000),
    surface: Color(0xFF2E3440),
    onSurface: Color(0xFFECEFF4),
    onSurfaceVariant: Color(0xFFECEFF4),
    surfaceTint: Color(0xFF88C0D0),
    inverseSurface: Color(0xFFD8DEE9),
    onInverseSurface: Color(0xFF2E3440),
    outline: Color(0xFF6d717b),
    outlineVariant: Color(0xFF90939a),
    onError: Color(0xFF2E3440),
    errorContainer: Color(0xFFBF616A),
    onErrorContainer: Color(0xFF000000),
    surfaceContainerLowest: Color(0xFF373F4D),
    surfaceContainerLow: Color(0xFF3E4756),
    surfaceContainer: Color(0xFF414C5C),
    surfaceContainerHigh: Color(0xFF4E5766),
    surfaceContainerHighest: Color(0xFF505968),
  );
  static const ColorScheme strawberryColorSchemeLight = ColorScheme.light(
    primary: Color(0xFFA10833),
    onPrimary: Color(0xFFFFFFFF),
    primaryContainer: Color(0xFFD53855),
    onPrimaryContainer: Color(0xFFFFFFFF),
    secondary: Color(0xFFA10833),
    onSecondary: Color(0xFFFFFFFF),
    secondaryContainer: Color(0xFFD53855),
    onSecondaryContainer: Color(0xFFF6EAED),
    tertiary: Color(0xFF5F441D),
    onTertiary: Color(0xFFFFFFFF),
    tertiaryContainer: Color(0xFF87683D),
    onTertiaryContainer: Color(0xFFFFFFFF),
    error: Color(0xFFBA1A1A),
    onError: Color(0xFFFFFFFF),
    errorContainer: Color(0xFFFFDAD6),
    onErrorContainer: Color(0xFF410002),
    surface: Color(0xFFFAFAFA),
    onSurface: Color(0xFF261819),
    onSurfaceVariant: Color(0xFF594042),
    outline: Color(0xFF8D7071),
    outlineVariant: Color(0xFFE1BEC0),
    scrim: Color(0xFF000000),
    inverseSurface: Color(0xFF3D2C2D),
    onInverseSurface: Color(0xFFFFECED),
    inversePrimary: Color(0xFFFFB2B8),
    surfaceDim: Color(0xFFEED4D5),
    surfaceBright: Color(0xFFFFF8F7),
    surfaceContainerLowest: Color(0xFFF7DCDD),
    surfaceContainerLow: Color(0xFFFDE2E3),
    surfaceContainer: Color(0xFFF6EAED),
    surfaceContainerHigh: Color(0xFFFFF0F0),
    surfaceContainerHighest: Color(0xFFFFFFFF),
  );
  static const ColorScheme strawberryColorSchemeDark = ColorScheme.dark(
    primary: Color(0xFFFFB2B8),
    onPrimary: Color(0xFF67001D),
    primaryContainer: Color(0xFFD53855),
    onPrimaryContainer: Color(0xFFFFFFFF),
    secondary: Color(0xFFED4A65),
    onSecondary: Color(0xFF201A1A),
    secondaryContainer: Color(0xFF91002A),
    onSecondaryContainer: Color(0xFFFFFFFF),
    tertiary: Color(0xFFE8C08E),
    onTertiary: Color(0xFF201A1A),
    tertiaryContainer: Color(0xFF775930),
    onTertiaryContainer: Color(0xFFFFF7F1),
    error: Color(0xFFFFB4AB),
    onError: Color(0xFF690005),
    errorContainer: Color(0xFF93000A),
    onErrorContainer: Color(0xFFFFDAD6),
    surface: Color(0xFF201A1A),
    onSurface: Color(0xFFF7DCDD),
    onSurfaceVariant: Color(0xFFE1BEC0),
    outline: Color(0xFFA9898B),
    outlineVariant: Color(0xFF594042),
    scrim: Color(0xFF000000),
    inverseSurface: Color(0xFFF7DCDD),
    onInverseSurface: Color(0xFF3D2C2D),
    inversePrimary: Color(0xFFB61F40),
    surfaceDim: Color(0xFF1D1011),
    surfaceBright: Color(0xFF463536),
    surfaceContainerLowest: Color(0xFF2C2222),
    surfaceContainerLow: Color(0xFF302525),
    surfaceContainer: Color(0xFF322727),
    surfaceContainerHigh: Color(0xFF3C2F2F),
    surfaceContainerHighest: Color(0xFF463737),
  );
  static const ColorScheme takoColorSchemeLight = ColorScheme.light(
    primary: Color(0xFF66577E),
    onPrimary: Color(0xFFF3B375),
    primaryContainer: Color(0xFF66577E),
    onPrimaryContainer: Color(0xFFF3B375),
    inversePrimary: Color(0xFFD6BAFF),
    secondary: Color(0xFF66577E),
    onSecondary: Color(0xFFF3B375),
    secondaryContainer: Color(0xFFC8BED0),
    onSecondaryContainer: Color(0xFF66577E),
    tertiary: Color(0xFFF3B375),
    onTertiary: Color(0xFF574360),
    tertiaryContainer: Color(0xFFFDD6B0),
    onTertiaryContainer: Color(0xFF221437),
    surface: Color(0xFFF7F5FF),
    onSurface: Color(0xFF1B1B22),
    onSurfaceVariant: Color(0xFF49454E),
    surfaceTint: Color(0xFF66577E),
    inverseSurface: Color(0xFF313033),
    onInverseSurface: Color(0xFFF3EFF4),
    outline: Color(0xFF7A757E),
    surfaceContainerLowest: Color(0xFFD7D0DA),
    surfaceContainerLow: Color(0xFFDFD8E2),
    surfaceContainer: Color(0xFFE8E0EB),
    surfaceContainerHigh: Color(0xFFEEE6F1),
    surfaceContainerHighest: Color(0xFFF7EEFA),
  );
  static const ColorScheme takoColorSchemeDark = ColorScheme.dark(
    primary: Color(0xFFF3B375),
    onPrimary: Color(0xFF38294E),
    primaryContainer: Color(0xFFF3B375),
    onPrimaryContainer: Color(0xFF38294E),
    inversePrimary: Color(0xFF84531E),
    secondary: Color(0xFFF3B375),
    onSecondary: Color(0xFF38294E),
    secondaryContainer: Color(0xFF5C4D4B),
    onSecondaryContainer: Color(0xFFF3B375),
    tertiary: Color(0xFF66577E),
    onTertiary: Color(0xFFF3B375),
    tertiaryContainer: Color(0xFF4E4065),
    onTertiaryContainer: Color(0xFFEDDCFF),
    surface: Color(0xFF21212E),
    onSurface: Color(0xFFE3E0F2),
    onSurfaceVariant: Color(0xFFCBC4CE),
    surfaceTint: Color(0xFF66577E),
    inverseSurface: Color(0xFFE5E1E6),
    onInverseSurface: Color(0xFF1B1B1E),
    outline: Color(0xFF958F99),
    surfaceContainerLowest: Color(0xFF20202E),
    surfaceContainerLow: Color(0xFF262636),
    surfaceContainer: Color(0xFF2A2A3C),
    surfaceContainerHigh: Color(0xFF303044),
    surfaceContainerHighest: Color(0xFF36364D),
  );
  static const ColorScheme tealTurquoiseColorSchemeLight = ColorScheme.light(
    primary: Color(0xFF008080),
    onPrimary: Color(0xFFFFFFFF),
    primaryContainer: Color(0xFF008080),
    onPrimaryContainer: Color(0xFFFFFFFF),
    inversePrimary: Color(0xFF40E0D0),
    secondary: Color(0xFF008080),
    onSecondary: Color(0xFFFFFFFF),
    secondaryContainer: Color(0xFFCFE5E4),
    onSecondaryContainer: Color(0xFF008080),
    tertiary: Color(0xFFFF7F7F),
    onTertiary: Color(0xFF000000),
    tertiaryContainer: Color(0xFF2A1616),
    onTertiaryContainer: Color(0xFFFF7F7F),
    surface: Color(0xFFFAFAFA),
    onSurface: Color(0xFF050505),
    onSurfaceVariant: Color(0xFF050505),
    surfaceTint: Color(0xFFBFDFDF),
    inverseSurface: Color(0xFF050505),
    onInverseSurface: Color(0xFFFAFAFA),
    outline: Color(0xFF6F7977),
    surfaceContainerLowest: Color(0xFFE1E9E7),
    surfaceContainerLow: Color(0xFFE6EEEC),
    surfaceContainer: Color(0xFFEBF3F1),
    surfaceContainerHigh: Color(0xFFF0F8F6),
    surfaceContainerHighest: Color(0xFFF7FFFD),
  );
  static const ColorScheme tealTurquoiseColorSchemeDark = ColorScheme.dark(
    primary: Color(0xFF40E0D0),
    onPrimary: Color(0xFF000000),
    primaryContainer: Color(0xFF40E0D0),
    onPrimaryContainer: Color(0xFF000000),
    inversePrimary: Color(0xFF008080),
    secondary: Color(0xFF40E0D0),
    onSecondary: Color(0xFF000000),
    secondaryContainer: Color(0xFF18544E),
    onSecondaryContainer: Color(0xFF40E0D0),
    tertiary: Color(0xFFBF1F2F),
    onTertiary: Color(0xFFFFFFFF),
    tertiaryContainer: Color(0xFF200508),
    onTertiaryContainer: Color(0xFFBF1F2F),
    surface: Color(0xFF202125),
    onSurface: Color(0xFFDFDEDA),
    onSurfaceVariant: Color(0xFFDFDEDA),
    surfaceTint: Color(0xFF40E0D0),
    inverseSurface: Color(0xFFDFDEDA),
    onInverseSurface: Color(0xFF202125),
    outline: Color(0xFF899391),
    surfaceContainerLowest: Color(0xFF202C2E),
    surfaceContainerLow: Color(0xFF222F31),
    surfaceContainer: Color(0xFF233133),
    surfaceContainerHigh: Color(0xFF28383A),
    surfaceContainerHighest: Color(0xFF2F4244),
  );
  static const ColorScheme tidalWaveColorSchemeLight = ColorScheme.light(
    primary: Color(0xFF006780),
    onPrimary: Color(0xFFffffff),
    primaryContainer: Color(0xFFB4D4DF),
    onPrimaryContainer: Color(0xFF001f28),
    inversePrimary: Color(0xFFff987f),
    secondary: Color(0xFF006780),
    onSecondary: Color(0xFFffffff),
    secondaryContainer: Color(0xFF9AE1FF),
    onSecondaryContainer: Color(0xFF001f28),
    tertiary: Color(0xFF92f7bc),
    onTertiary: Color(0xFF001c3b),
    tertiaryContainer: Color(0xFFc3fada),
    onTertiaryContainer: Color(0xFF78ffd6),
    surface: Color(0xFFfdfbff),
    onSurface: Color(0xFF001c3b),
    onSurfaceVariant: Color(0xFF40484c),
    surfaceTint: Color(0xFF006780),
    inverseSurface: Color(0xFF020400),
    onInverseSurface: Color(0xFFffe3c4),
    outline: Color(0xFF70787c),
    surfaceContainerLowest: Color(0xFFe2e8ec),
    surfaceContainerLow: Color(0xFFe5ecf1),
    surfaceContainer: Color(0xFFe8eff5),
    surfaceContainerHigh: Color(0xFFedf4fA),
    surfaceContainerHighest: Color(0xFFf5faff),
  );
  static const ColorScheme tidalWaveColorSchemeDark = ColorScheme.dark(
    primary: Color(0xFF5ed4fc),
    onPrimary: Color(0xFF003544),
    primaryContainer: Color(0xFF004d61),
    onPrimaryContainer: Color(0xFFb8eaff),
    inversePrimary: Color(0xFFa12b03),
    secondary: Color(0xFF5ed4fc),
    onSecondary: Color(0xFF003544),
    secondaryContainer: Color(0xFF004d61),
    onSecondaryContainer: Color(0xFFb8eaff),
    tertiary: Color(0xFF92f7bc),
    onTertiary: Color(0xFF001c3b),
    tertiaryContainer: Color(0xFFc3fada),
    onTertiaryContainer: Color(0xFF78ffd6),
    surface: Color(0xFF001c3b),
    onSurface: Color(0xFFd5e3ff),
    onSurfaceVariant: Color(0xFFbfc8cc),
    surfaceTint: Color(0xFF5ed4fc),
    inverseSurface: Color(0xFFffe3c4),
    onInverseSurface: Color(0xFF001c3b),
    outline: Color(0xFF8a9296),
    surfaceContainerLowest: Color(0xFF072642),
    surfaceContainerLow: Color(0xFF072947),
    surfaceContainer: Color(0xFF082b4b),
    surfaceContainerHigh: Color(0xFF093257),
    surfaceContainerHighest: Color(0xFF0A3861),
  );
  static const ColorScheme yinAndYangColorSchemeLight = ColorScheme.light(
    primary: Color(0xFF000000),
    onPrimary: Color(0xFFFFFFFF),
    primaryContainer: Color(0xFF000000),
    onPrimaryContainer: Color(0xFFFFFFFF),
    inversePrimary: Color(0xFFA6A6A6),
    secondary: Color(0xFF000000),
    onSecondary: Color(0xFFFFFFFF),
    secondaryContainer: Color(0xFFDDDDDD),
    onSecondaryContainer: Color(0xFF0C0C0C),
    tertiary: Color(0xFFFFFFFF),
    onTertiary: Color(0xFF000000),
    tertiaryContainer: Color(0xFFD8E2FF),
    onTertiaryContainer: Color(0xFF001947),
    surface: Color(0xFFFDFDFD),
    onSurface: Color(0xFF222222),
    onSurfaceVariant: Color(0xFF515151),
    surfaceTint: Color(0xFF000000),
    inverseSurface: Color(0xFF333333),
    onInverseSurface: Color(0xFFF4F4F4),
    outline: Color(0xFF838383),
    surfaceContainerLowest: Color(0xFFCFCFCF),
    surfaceContainerLow: Color(0xFFDADADA),
    surfaceContainer: Color(0xFFE8E8E8),
    surfaceContainerHigh: Color(0xFFECECEC),
    surfaceContainerHighest: Color(0xFFEFEFEF),
  );
  static const ColorScheme yinAndYangColorSchemeDark = ColorScheme.dark(
    primary: Color(0xFFFFFFFF),
    onPrimary: Color(0xFF5A5A5A),
    primaryContainer: Color(0xFFFFFFFF),
    onPrimaryContainer: Color(0xFF000000),
    inversePrimary: Color(0xFFCECECE),
    secondary: Color(0xFFFFFFFF),
    onSecondary: Color(0xFF5A5A5A),
    secondaryContainer: Color(0xFF717171),
    onSecondaryContainer: Color(0xFFE4E4E4),
    tertiary: Color(0xFF000000),
    onTertiary: Color(0xFFFFFFFF),
    tertiaryContainer: Color(0xFF00419E),
    onTertiaryContainer: Color(0xFFD8E2FF),
    surface: Color(0xFF1E1E1E),
    onSurface: Color(0xFFE6E6E6),
    onSurfaceVariant: Color(0xFFD1D1D1),
    surfaceTint: Color(0xFFFFFFFF),
    inverseSurface: Color(0xFFE6E6E6),
    onInverseSurface: Color(0xFF1E1E1E),
    outline: Color(0xFF999999),
    surfaceContainerLowest: Color(0xFF2A2A2A),
    surfaceContainerLow: Color(0xFF2D2D2D),
    surfaceContainer: Color(0xFF313131),
    surfaceContainerHigh: Color(0xFF383838),
    surfaceContainerHighest: Color(0xFF3F3F3F),
  );
  static const ColorScheme yotsubaColorSchemeLight = ColorScheme.light(
    primary: Color(0xFFAE3200),
    onPrimary: Color(0xFFFFFFFF),
    primaryContainer: Color(0xFFFFDBCF),
    onPrimaryContainer: Color(0xFF3B0A00),
    inversePrimary: Color(0xFFFFB59D),
    secondary: Color(0xFFAE3200),
    onSecondary: Color(0xFFFFFFFF),
    secondaryContainer: Color(0xFFEBCDC2),
    onSecondaryContainer: Color(0xFF3B0A00),
    tertiary: Color(0xFF6B5E2F),
    onTertiary: Color(0xFFFFFFFF),
    tertiaryContainer: Color(0xFFF5E2A7),
    onTertiaryContainer: Color(0xFF231B00),
    surface: Color(0xFFFCFCFC),
    onSurface: Color(0xFF211A18),
    onSurfaceVariant: Color(0xFF53433F),
    surfaceTint: Color(0xFFAE3200),
    inverseSurface: Color(0xFF362F2D),
    onInverseSurface: Color(0xFFFBEEEB),
    outline: Color(0xFF85736E),
    surfaceContainerLowest: Color(0xFFECE3E0),
    surfaceContainerLow: Color(0xFFF1E7E4),
    surfaceContainer: Color(0xFFF6EBE7),
    surfaceContainerHigh: Color(0xFFFAF4F2),
    surfaceContainerHighest: Color(0xFFFBF6F4),
  );
  static const ColorScheme yotsubaColorSchemeDark = ColorScheme.dark(
    primary: Color(0xFFFFB59D),
    onPrimary: Color(0xFF5F1600),
    primaryContainer: Color(0xFF862200),
    onPrimaryContainer: Color(0xFFFFDBCF),
    inversePrimary: Color(0xFFAE3200),
    secondary: Color(0xFFFFB59D),
    onSecondary: Color(0xFF5F1600),
    secondaryContainer: Color(0xFF862200),
    onSecondaryContainer: Color(0xFFFFDBCF),
    tertiary: Color(0xFFD7C68D),
    onTertiary: Color(0xFF3A2F05),
    tertiaryContainer: Color(0xFF524619),
    onTertiaryContainer: Color(0xFFF5E2A7),
    surface: Color(0xFF211A18),
    onSurface: Color(0xFFEDE0DD),
    onSurfaceVariant: Color(0xFFD8C2BC),
    surfaceTint: Color(0xFFFFB59D),
    inverseSurface: Color(0xFFEDE0DD),
    onInverseSurface: Color(0xFF211A18),
    outline: Color(0xFFA08C87),
    surfaceContainerLowest: Color(0xFF2E221F),
    surfaceContainerLow: Color(0xFF312521),
    surfaceContainer: Color(0xFF332723),
    surfaceContainerHigh: Color(0xFF413531),
    surfaceContainerHighest: Color(0xFF4C403D),
  );

  static const String yominexusColorSchemeValue = 'Default';
  static const String cloudflareColorSchemeValue = 'Cloudflare';
  static const String cottonCandyColorSchemeValue = 'Cotton Candy';
  static const String doomColorSchemeValue = 'Doom';
  static const String greenAppleColorSchemeValue = 'Green Apple';
  static const String lavenderColorSchemeValue = 'Lavender';
  static const String matrixColorSchemeValue = 'Matrix';
  static const String midnightDuskColorSchemeValue = 'Midnight Dusk';
  static const String mochaColorSchemeValue = 'Mocha';
  static const String sapphireColorSchemeValue = 'Sapphire';
  static const String nordColorSchemeValue = 'Nord';
  static const String strawberryColorSchemeValue = 'Strawberry Daiquiri';
  static const String takoColorSchemeValue = 'Tako';
  static const String tealTurquoiseColorSchemeValue = 'Teal & Turquoise';
  static const String tidalWaveColorSchemeValue = 'Tidal Wave';
  static const String yinAndYangColorSchemeValue = 'Yin & Yang';
  static const String yotsubaColorSchemeValue = 'Yotsuba';

  static Future<void> init() async {
    sharedPreferences = await SharedPreferencesWithCache.create(
      cacheOptions: const SharedPreferencesWithCacheOptions(
        allowList: allowList,
      ),
    );
  }
}
